/* 
 * LocationIQ
 *
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using locationiq.Client;
using locationiq.Api;
using locationiq.Model;

namespace locationiq.Test
{
    /// <summary>
    ///  Class for testing MatchingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MatchingApiTests
    {
        private MatchingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MatchingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MatchingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' MatchingApi
            //Assert.IsInstanceOf(typeof(MatchingApi), instance);
        }

        
        /// <summary>
        /// Test Matching
        /// </summary>
        [Test]
        public void MatchingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string coordinates = null;
            //string generateHints = null;
            //string approaches = null;
            //string exclude = null;
            //string bearings = null;
            //string radiuses = null;
            //string steps = null;
            //string annotations = null;
            //string geometries = null;
            //string overview = null;
            //string timestamps = null;
            //string gaps = null;
            //string tidy = null;
            //string waypoints = null;
            //var response = instance.Matching(coordinates, generateHints, approaches, exclude, bearings, radiuses, steps, annotations, geometries, overview, timestamps, gaps, tidy, waypoints);
            //Assert.IsInstanceOf(typeof(DirectionsMatching), response, "response is DirectionsMatching");
        }
        
    }

}
